openapi: 3.0.0
info:
  title: Books API
  description: Optional multi-line or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /books/{bookId}:
    get:
      description: Get single book
      operationId: getBook
      x-eov-operation-id: getSingleBook
      x-eov-operation-handler: books
      parameters:
        - in: path
          name: bookId
          schema:
            type: string
          required: true
          description: ID of the book to get
      responses:
        '200':
          description: Success
          $ref: '#/components/responses/getSingleBookResponse'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      description: Delete single book
      operationId: deleteBook
      x-eov-operation-id: deleteSingleBook
      x-eov-operation-handler: books
      parameters:
        - in: path
          name: bookId
          schema:
            type: string
          required: true
          description: ID of the book to delete
      responses:
        '204':
          description: Success No Content
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /books:
    get:
      description: Returns books
      operationId: getBooks
      x-eov-operation-id: getBooks
      x-eov-operation-handler: books
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      description: Add books
      operationId: addBooks
      x-eov-operation-id: addBooks
      x-eov-operation-handler: books
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postBookBody'
      responses:
        '201':
          description: Success
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /healthcheck/ping:
    get:
      description: Returns the readiness of the service
      operationId: ping
      x-eov-operation-id: ping
      x-eov-operation-handler: healthcheck
      parameters:
        - $ref: '#/components/parameters/x-correlation-id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '401':
      description: Unauthorised Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorisedError'
    '404':
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    getSingleBookResponse:
      description: Get single book response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/book'
      $ref: '#/components/schemas/book'
    default:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
  parameters:
    x-correlation-id:
      name: x-correlation-id
      required: true
      in: header
      description: Correlation ID required for log tracing.
      schema:
        type: string
        format: uuid
  schemas:
    deleteBooksRequestBody:
      description: Delete request body
      type: array
      items:
        type: string
        example: 5f05d025eab386302483a3bd
    postBookBody:
      description: Post body to create a new book in the database
      type: array
      items:
        $ref: '#/components/schemas/book'
    book:
      type: object
      required:
        - name
        - author
        - categories
      additionalProperties: false
      properties:
        name:
          type: string
          example: The Illuminatus Trilogy
        author:
          type: string
          example: Robert Anton Wilson
        categories:
          type: array
          items:
            type: string
            example: Science Fiction
    healthCheckResponse:
      description: healthcheck OK response
      type: object
      properties:
        message:
          type: string
          enum:
            - OK
    NotFoundError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    UnauthorisedError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InvalidRequestError:
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InternalServerError:
      title: Internal Server Error
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
